/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.35).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ru.practicum.explorewithme.api.forpublic;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import ru.practicum.explorewithme.exceptions.EventTimeException;
import ru.practicum.explorewithme.exceptions.notfound.EventNotFoundException;
import ru.practicum.explorewithme.model.event.EventFullDto;
import ru.practicum.explorewithme.model.event.EventShortDto;

import javax.validation.Valid;
import java.time.LocalDateTime;
import java.util.List;

@Validated
public interface EventsApi {

    @RequestMapping(value = "/events/{id}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<EventFullDto> getEventById(@PathVariable("id") Long id) throws EventNotFoundException, EventTimeException;

    @RequestMapping(value = "/events",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<List<EventShortDto>> getEventsShort(@Valid @RequestParam(value = "text", required = false) String text,
                                                       @Valid @RequestParam(value = "categories", required = false) List<Long> categories,
                                                       @Valid @RequestParam(value = "paid", required = false) Boolean paid,
                                                       @Valid @RequestParam(value = "rangeStart", required = false) LocalDateTime rangeStart,
                                                       @Valid @RequestParam(value = "rangeEnd", required = false) LocalDateTime rangeEnd,
                                                       @Valid @RequestParam(value = "onlyAvailable", required = false, defaultValue = "false") Boolean onlyAvailable,
                                                       @Valid @RequestParam(value = "sort", required = false) String sort,
                                                       @Valid @RequestParam(value = "from", required = false, defaultValue = "0") Integer from,
                                                       @Valid @RequestParam(value = "size", required = false, defaultValue = "10") Integer size) throws EventTimeException;
}

