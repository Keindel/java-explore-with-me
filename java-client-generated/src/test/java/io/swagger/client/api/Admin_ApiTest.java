/*
 * Main service API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AdminUpdateEventRequest;
import io.swagger.client.model.ApiError;
import io.swagger.client.model.CategoryDto;
import io.swagger.client.model.CompilationDto;
import io.swagger.client.model.EventFullDto;
import io.swagger.client.model.NewCategoryDto;
import io.swagger.client.model.NewCompilationDto;
import io.swagger.client.model.NewUserRequest;
import io.swagger.client.model.UserDto;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for Admin_Api
 */
@Ignore
public class Admin_ApiTest {

    private final Admin_Api api = new Admin_Api();

    /**
     * Добавление новой категории
     *
     * Обратите внимание: имя категории должно быть уникальным
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addCategoryTest() throws Exception {
        NewCategoryDto body = null;
        CategoryDto response = api.addCategory(body);

        // TODO: test validations
    }
    /**
     * Добавить событие в подборку
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addEventToCompilationTest() throws Exception {
        Long compId = null;
        Long eventId = null;
        api.addEventToCompilation(compId, eventId);

        // TODO: test validations
    }
    /**
     * Удаление пользователя
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteTest() throws Exception {
        Long userId = null;
        api.delete(userId);

        // TODO: test validations
    }
    /**
     * Удаление категории
     *
     * Обратите внимание: с категорией не должно быть связано ни одного события.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteCategoryTest() throws Exception {
        Long catId = null;
        api.deleteCategory(catId);

        // TODO: test validations
    }
    /**
     * Удаление подборки
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteCompilationTest() throws Exception {
        Long compId = null;
        api.deleteCompilation(compId);

        // TODO: test validations
    }
    /**
     * Поиск событий
     *
     * Эндпоинт возвращает полную информацию обо всех событиях подходящих под переданные условия
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getEvents2Test() throws Exception {
        List<Long> users = null;
        List<String> states = null;
        List<Long> categories = null;
        String rangeStart = null;
        String rangeEnd = null;
        Integer from = null;
        Integer size = null;
        List<EventFullDto> response = api.getEvents2(users, states, categories, rangeStart, rangeEnd, from, size);

        // TODO: test validations
    }
    /**
     * Получение информации о пользователях
     *
     * Возвращает информацию обо всех пользователях (учитываются параметры ограничения выборки), либо о конкретных (учитываются указанные идентификаторы)
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUsersTest() throws Exception {
        List<Long> ids = null;
        Integer from = null;
        Integer size = null;
        List<UserDto> response = api.getUsers(ids, from, size);

        // TODO: test validations
    }
    /**
     * Закрепить подборку на главной странице
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pinTest() throws Exception {
        Long compId = null;
        api.pin(compId);

        // TODO: test validations
    }
    /**
     * Публикация события
     *
     * Обратите внимание:  - дата начала события должна быть не ранее чем за час от даты публикации. - событие должно быть в состоянии ожидания публикации
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void publishEventTest() throws Exception {
        Long eventId = null;
        EventFullDto response = api.publishEvent(eventId);

        // TODO: test validations
    }
    /**
     * Добавление нового пользователя
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void registerUserTest() throws Exception {
        NewUserRequest body = null;
        UserDto response = api.registerUser(body);

        // TODO: test validations
    }
    /**
     * Отклонение события
     *
     * Обратите внимание: событие не должно быть опубликовано.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void rejectEventTest() throws Exception {
        Long eventId = null;
        EventFullDto response = api.rejectEvent(eventId);

        // TODO: test validations
    }
    /**
     * Удалить событие из подборки
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeEventFromCompilationTest() throws Exception {
        Long compId = null;
        Long eventId = null;
        api.removeEventFromCompilation(compId, eventId);

        // TODO: test validations
    }
    /**
     * Добавление новой подборки
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void saveCompilationTest() throws Exception {
        NewCompilationDto body = null;
        CompilationDto response = api.saveCompilation(body);

        // TODO: test validations
    }
    /**
     * Открепить подборку на главной странице
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unpinTest() throws Exception {
        Long compId = null;
        api.unpin(compId);

        // TODO: test validations
    }
    /**
     * Изменение категории
     *
     * Обратите внимание: имя категории должно быть уникальным
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateCategoryTest() throws Exception {
        CategoryDto body = null;
        CategoryDto response = api.updateCategory(body);

        // TODO: test validations
    }
    /**
     * Редактирование события
     *
     * Редактирование данных любого события администратором. Валидация данных не требуется.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateEventTest() throws Exception {
        AdminUpdateEventRequest body = null;
        Long eventId = null;
        EventFullDto response = api.updateEvent(body, eventId);

        // TODO: test validations
    }
}
